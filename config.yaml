problem:
  name: Example
  template_case: 'pitzDaily'
  parameters:
    viscosity:
      type: range
      value_type: float
      bounds: [1e-5, 1e-3]
      log_scale: True
    turbulentKineticEnergy:
      type: range
      value_type: float
      bounds: [0, 0.4]
      log_scale: False
    turbulentKineticDissipation:
      type: range
      value_type: float
      bounds: [0, 20]
      log_scale: False
    inletVelocity:
      type: range
      value_type: float
      bounds: [5.0, 20.0]
      log_scale: False
    divUOperator:
      type: choice
      value_type: str
      values: ["bounded Gauss linearUpwind grad(U)", "Gauss linear", "Gauss upwind", "Gauss limintedLinear grad(U)"]
      is_ordered: True
  objectives:
    ExecutionTime:
      command: ['awk', '/ExecutionTime/{a=$3} END{print(a)}', 'log.simpleFoam']
      threshold: 5
      minimize: True
      lower_is_better: True
      mode: local
    ContinuityErrors:
      command: ['awk', 'function abs(v) {return v < 0 ? -v : v} /continuity errors/{a=$15} END{print(abs(a))}', 'log.simpleFoam']
      #command: ['awk', 'function abs(v) {return v < 0 ? -v : v} /continuity errors/{a=$15} END{print(abs(a))}', 'log.1.0']
      threshold: 1e-10
      minimize: True
      lower_is_better: True
      mode: local

meta:
  case_subdirs_to_clone: []
  clone_destination: ""
  case_run_mode: local
  metric_value_mode: local
  case_run_command: ['./Allrun']
  #case_run_command: ['sbatch', '-J', '$CASE_NAME', './Allrun.slurm', '$CASE_PATH']
  #slurm_status_query: ['sacct', '--name', '$CASE_NAME', '-o', 'JobName%60,State', '-n']
  n_trials: 10
  n_parallel_trials: 3
  use_saasbo: True
  n_pareto_points: 5
  # Paramters can be substitued as whole case files
  # There are done first if present
  #file_copies:
  #modelType:
  #  template: "/constant/transportProperties"
  # Parameters can also be substituted per-file
  scopes:
    "/0/U":
      inletVelocity: "inletU"
    "/0/k":
      turbulentKineticEnergy: "k"
    "/0/epsilon":
      turbulentKineticDissipation: "epsilon"
    "/system/fvSchemes":
      divUOperator: "divSchemes.div(phi,U)"
